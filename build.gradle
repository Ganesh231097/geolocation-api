plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.nyusta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.maxmind.geoip2:geoip2:4.0.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'org.apache.commons:commons-compress:1.21'
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.named('bootJar') {
	archiveFileName = 'geolocation-api.jar'

	// JVM optimization flags
	manifest {
		attributes(
				'Main-Class': 'org.springframework.boot.loader.JarLauncher',
				'Multi-Release': 'true'
		)
	}
}

// Production build profile
tasks.register('prodBuild') {
	dependsOn 'clean', 'build'
	description = 'Clean and build for production'

	doLast {
		println 'Production build completed'
	}
}
